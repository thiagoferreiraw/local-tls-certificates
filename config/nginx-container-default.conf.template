server {
    listen       80;
    listen  [::]:80;
    server_name $WEBAPP_SERVER_NAME;

    listen 443 ssl;
    listen [::]:443 ssl;
    
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    location / {
        proxy_pass $WEBAPP_UPSTREAM_SERVER;
    }
}

server {
    listen       80;
    listen  [::]:80;
    server_name $API_SERVER_NAME;

    listen 443 ssl;
    listen [::]:443 ssl;
    
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    location / {        
        proxy_pass $API_UPSTREAM_SERVER;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;

        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;

        add_header 'Access-Control-Allow-Origin' '*' always;        
        add_header 'X-Debug' 'local-tls' always;
        
        if ($request_method = 'OPTIONS' ) {
            add_header 'Access-Control-Expose-Headers' 'request-id' always;
            add_header 'Access-Control-Allow-Headers' 'accept, authorization, content-type, fe-version, idempotency-key, x-location, x-company-id' always;
            add_header 'Access-Control-Allow-Methods' 'DELETE, GET, OPTIONS, PATCH, POST' always;
            add_header 'Access-Control-Allow-Origin' '*' always;
            
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
    }
}